@tailwind base;
@tailwind components;
@tailwind utilities;

/* :root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
} */

/* body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
} */




@layer utilities{
  .card {
    width: 20%;
    height:95%;
    perspective: 1000px; /* Determines the 3D perspective for the card */
    display: flex;
    flex-direction: column;
    align-items: center;
    
    
  }
  
  .front,
  .back {
    width: 100%;
    height: 100%;
    position: absolute;
    backface-visibility: hidden; /* Hides the back side initially */
    /* background-color: brown; */
    transition:transform 0.6s ;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .front {
    transform: rotateY(0deg);
     /* Initial state, showing the front side */
  }
  
  
  .back {
    transform: rotateY(180deg);
     /* Initially flipped, hidden back side */
  }
  
  
  .card:hover .front {
    transform: rotateY(-180deg); /* Flips the card to show the back side on hover */
  }
  
  .card:hover .back {
    transform: rotateY(0deg); /* Flips the card to show the front side on hover */
  }
  

  @keyframes slideIn {
    0% {
      transform: translateX(-100%);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
 
  
  .animate-button {
    animation: slideIn 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    animation-delay: calc(0.1s * var(--button-index));
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    transform-origin: center;
  }
  
  
  
  
  
   
  }

